{"version":3,"sources":["components/BasicForm/BasicForm.js","components/BasicForm/BasicForm.module.css"],"names":["BasicForm","useState","errorName","setErrorName","errorEmail","setErrorEmail","dispatch","useDispatch","history","useHistory","nameInputRef","useRef","emailInputRef","className","classes","container","htmlFor","title","input","invalid","ref","id","name","type","required","btn","value","onClick","e","preventDefault","nameValue","current","emailValue","fetch","method","headers","body","JSON","stringify","email","then","result","json","data","errorData","map","item","param","alert","msg","userActions","setUserId","userId","typeActions","proceedClicked","push","catch","err","console","log","module","exports"],"mappings":"wLA0GeA,UAnGG,WAChB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAAWC,cACXC,EAAUC,cAEVC,EAAeC,mBACfC,EAAgBD,mBAiDtB,OACE,cAAC,WAAD,UACE,sBAAKE,UAAWC,IAAQC,UAAxB,UACE,qEACA,iCACE,uBAAOC,QAAQ,OAAOC,MAAM,OAA5B,kBAGA,uBACEJ,UAAS,UAAKC,IAAQI,MAAb,YAAsBhB,EAAYY,IAAQK,QAAU,IAC7DC,IAAKV,EACLW,GAAG,OACHC,KAAK,OACLC,KAAK,OACLC,UAAQ,IAGV,uBAAOR,QAAQ,QAAQC,MAAM,QAA7B,mBAGA,uBACEG,IAAKR,EACLC,UAAS,UAAKC,IAAQI,MAAb,YAAsBd,EAAaU,IAAQK,QAAU,IAC9DE,GAAG,QACHC,KAAK,QACLC,KAAK,QACLC,UAAQ,IAGV,uBACEX,UAAWC,IAAQW,IACnBJ,GAAG,OACHK,MAAM,UACNH,KAAK,SACLI,QAjFc,SAACC,GACvBA,EAAEC,iBACF,IAAMC,EAAYpB,EAAaqB,QAAQL,MACjCM,EAAapB,EAAcmB,QAAQL,MAErCI,GACF3B,GAAa,GAEX6B,GACF3B,GAAc,GAGhB4B,MAAM,2CAA4C,CAChDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,MAAOP,EACPV,KAAMQ,MAGPU,MAAK,SAACC,GACL,OAAOA,EAAOC,UAEfF,MAAK,SAACG,GACDA,EAAKC,UACPD,EAAKC,UAAUC,KAAI,SAACC,GACA,SAAdA,EAAKC,OACP1C,GAAc,GAEE,QAAdyC,EAAKC,OACP5C,GAAa,GAEf6C,MAAMF,EAAKG,SAGb3C,EAAS4C,IAAYC,UAAUR,EAAKS,SACpC9C,EAAS+C,IAAYC,kBACrB9C,EAAQ+C,KAAK,kBAIhBC,OAAM,SAACC,GACNC,QAAQC,IAAI,SAAUF,mB,mBC5D9BG,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,yBAAyB,QAAU,2BAA2B,IAAM","file":"static/js/4.7a07d702.chunk.js","sourcesContent":["import { Fragment, useRef, useState } from \"react\";\r\nimport classes from \"./BasicForm.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { userActions } from \"../../store/user\";\r\nimport { useHistory } from \"react-router\";\r\nimport { typeActions } from \"../../store/showType\";\r\n\r\nconst BasicForm = () => {\r\n  const [errorName, setErrorName] = useState(false);\r\n  const [errorEmail, setErrorEmail] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const nameInputRef = useRef();\r\n  const emailInputRef = useRef();\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    const nameValue = nameInputRef.current.value;\r\n    const emailValue = emailInputRef.current.value;\r\n\r\n    if (nameValue) {\r\n      setErrorName(false);\r\n    }\r\n    if (emailValue) {\r\n      setErrorEmail(false);\r\n    }\r\n\r\n    fetch(\"http://localhost:8080/entry/user-details\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: emailValue,\r\n        name: nameValue,\r\n      }),\r\n    })\r\n      .then((result) => {\r\n        return result.json();\r\n      })\r\n      .then((data) => {\r\n        if (data.errorData) {\r\n          data.errorData.map((item) => {\r\n            if (item.param == \"email\") {\r\n              setErrorEmail(true);\r\n            }\r\n            if (item.param == \"name\") {\r\n              setErrorName(true);\r\n            }\r\n            alert(item.msg);\r\n          });\r\n        } else {\r\n          dispatch(userActions.setUserId(data.userId));\r\n          dispatch(typeActions.proceedClicked());\r\n          history.push(\"/questions\");\r\n          //State change question start\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"errors\", err);\r\n      });\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.container}>\r\n        <h2>Please tell us brief about yourself</h2>\r\n        <form>\r\n          <label htmlFor=\"name\" title=\"Name\">\r\n            Name\r\n          </label>\r\n          <input\r\n            className={`${classes.input} ${errorName ? classes.invalid : \"\"}`}\r\n            ref={nameInputRef}\r\n            id=\"name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            required\r\n          />\r\n\r\n          <label htmlFor=\"email\" title=\"email\">\r\n            Email\r\n          </label>\r\n          <input\r\n            ref={emailInputRef}\r\n            className={`${classes.input} ${errorEmail ? classes.invalid : \"\"}`}\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            required\r\n          />\r\n\r\n          <input\r\n            className={classes.btn}\r\n            id=\"name\"\r\n            value=\"Proceed\"\r\n            type=\"submit\"\r\n            onClick={onSubmitHandler}\r\n          />\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BasicForm;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BasicForm_container__3rhfo\",\"input\":\"BasicForm_input__1D-QL\",\"invalid\":\"BasicForm_invalid__20ibt\",\"btn\":\"BasicForm_btn__Kmjee\"};"],"sourceRoot":""}